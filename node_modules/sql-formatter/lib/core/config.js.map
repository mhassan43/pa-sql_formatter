{"version":3,"sources":["../../src/core/config.ts"],"names":["indentString","cfg","indentStyle","repeat","useTabs","tabWidth","isTabularStyle"],"mappings":";;;;;;;;AAEA;;AAEA;AACA;AACA;AACO,SAASA,YAAT,CAAsBC,GAAtB,EAAkD;AACvD,MAAIA,GAAG,CAACC,WAAJ,KAAoB,aAApB,IAAqCD,GAAG,CAACC,WAAJ,KAAoB,cAA7D,EAA6E;AAC3E,WAAO,IAAIC,MAAJ,CAAW,EAAX,CAAP;AACD;;AACD,MAAIF,GAAG,CAACG,OAAR,EAAiB;AACf,WAAO,IAAP;AACD;;AACD,SAAO,IAAID,MAAJ,CAAWF,GAAG,CAACI,QAAf,CAAP;AACD;AAED;AACA;AACA;;;AACO,SAASC,cAAT,CAAwBL,GAAxB,EAAqD;AAC1D,SAAOA,GAAG,CAACC,WAAJ,KAAoB,aAApB,IAAqCD,GAAG,CAACC,WAAJ,KAAoB,cAAhE;AACD","sourcesContent":["import type { FormatOptions } from 'src/types';\n\n// Utility functions for config options\n\n/**\n * Creates a string to use for one step of indentation.\n */\nexport function indentString(cfg: FormatOptions): string {\n  if (cfg.indentStyle === 'tabularLeft' || cfg.indentStyle === 'tabularRight') {\n    return ' '.repeat(10);\n  }\n  if (cfg.useTabs) {\n    return '\\t';\n  }\n  return ' '.repeat(cfg.tabWidth);\n}\n\n/**\n * True when indentStyle is one of the tabular ones.\n */\nexport function isTabularStyle(cfg: FormatOptions): boolean {\n  return cfg.indentStyle === 'tabularLeft' || cfg.indentStyle === 'tabularRight';\n}\n"],"file":"config.js"}